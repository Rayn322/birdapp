import { type NextPage } from 'next';
import Head from 'next/head';
import { signIn, signOut, useSession } from 'next-auth/react';
import { trpc } from '../utils/trpc';
import CreatePost from '../components/CreatePost';

const Home: NextPage = () => {
  const { data: posts, refetch } = trpc.post.getPosts.useQuery();

  return (
    <>
      <Head>
        <title>Bird App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <CreatePost refetch={refetch} />
        {posts?.map((post) => (
          <div
            className="m-2 w-96 rounded border-2 border-black p-2"
            key={post.id}
          >
            <h1 className="text-xl">{post.title}</h1>
            <p>{post.content}</p>
            <p>
              {post.author.name} on {post.createdAt.toLocaleDateString()} at{' '}
              {post.createdAt.toLocaleTimeString()}
            </p>
          </div>
        ))}
        <AuthShowcase />
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-black px-10 py-3 font-semibold text-white transition hover:bg-gray-600"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? 'Sign out' : 'Sign in'}
      </button>
    </div>
  );
};
